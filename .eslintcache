[{"C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\index.js":"1","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\App.js":"2","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\HomePage.js":"3","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\components\\Card.js":"4","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\components\\UploadImage.js":"5","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\CreateGroup.js":"6","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\util.js":"7"},{"size":219,"mtime":1607437669534,"results":"8","hashOfConfig":"9"},{"size":270,"mtime":1607442236461,"results":"10","hashOfConfig":"9"},{"size":2081,"mtime":1607452647919,"results":"11","hashOfConfig":"9"},{"size":474,"mtime":1607452065714,"results":"12","hashOfConfig":"9"},{"size":1011,"mtime":1607452205046,"results":"13","hashOfConfig":"9"},{"size":3434,"mtime":1607452866473,"results":"14","hashOfConfig":"9"},{"size":318,"mtime":1607449873481,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"w5n1fq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\index.js",[],["36","37"],"C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\App.js",[],"C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\HomePage.js",["38"],"import React, { useState, useEffect } from 'react'\r\nimport CreateGroup from './CreateGroup';\r\nimport Card from './components/Card';\r\n\r\nconst HomePage = () => {\r\n    const [users, setusers] = useState([]);\r\n    const [teams, setteams] = useState([]);\r\n    const [currTeam, setcurrTeam] = useState({ Image: '', name: '', desc: '', members: [], id: null })\r\n    const [open, setopen] = useState(false);\r\n\r\n    const callGetUsersApi = async () => {\r\n        const response = await fetch('https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json');\r\n        const users = await response.json();\r\n        setusers(users);\r\n    }\r\n\r\n    useEffect(() => {\r\n        callGetUsersApi();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setcurrTeam({ Image: '', name: '', desc: '', members: [], id: null })\r\n        }\r\n    }, [open])\r\n\r\n    const handleTeam = (action, team) => {\r\n        let newTeams = [...teams];\r\n        if (action === 'add') {\r\n            newTeams.push(team);\r\n        } else if (action === 'edit') {\r\n            newTeams = newTeams.map(nT => {\r\n                if (nT.id == team.id) {\r\n                    nT = team;\r\n                }\r\n                return nT;\r\n            });\r\n        } else if (action === 'remove') {\r\n            newTeams = newTeams.filter(nT => nT.id !== team.id);\r\n        } else {\r\n            alert('Something went wrong. Please try again.')\r\n        }\r\n        setteams(newTeams);\r\n        setopen(false)\r\n    }\r\n\r\n    const handleTeamClick = (team) => {\r\n        setcurrTeam(team)\r\n        setopen(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {open && <CreateGroup users={users} handleTeam={handleTeam} setopen={setopen} currTeam={currTeam} />}\r\n            <section className='cardsWrapper'>\r\n                {!open && < button onClick={() => setopen(!open)}>Create Team</button>}\r\n                {teams.map((team, index) => <Card key={index} data={team} checked={false} handleClick={handleTeamClick} />)}\r\n            </section>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\components\\Card.js",["39"],"import React from 'react'\r\n\r\nconst Card = ({ data, checked, handleClick }) => {\r\n    const { id, name, Image } = data;\r\n    return (\r\n        <div className='cardWrapper' onClick={() => handleClick(data)}>\r\n            {checked && <div className='cardChecked'>+</div>}\r\n            <div className='imageWrapper'><img className='cardImage' alt={name} src={Image} /></div>\r\n            <div className='cardName'>{name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\components\\UploadImage.js",["40"],"import React, { useState } from 'react';\r\n\r\nconst UploadForm = ({ setImage }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const handleChange = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if (selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setImage(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (png or jpg)');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input className='uploader' type=\"file\" onChange={handleChange} accept=\"image/x-png,image/gif,image/jpeg\" />\r\n                <span className='cursor'>Group Logo</span>\r\n            </label>\r\n            <div>\r\n                {error && <div className=\"error\">{error}</div>}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UploadForm;","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\views\\CreateGroup.js",["41"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport Card from './components/Card';\r\nimport UploadImage from './components/UploadImage';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { validateGroup } from '../util';\r\n\r\nconst CreateGroup = ({ users, handleTeam, setopen, currTeam }) => {\r\n\r\n    const [team, setTeam] = useState(currTeam);\r\n    const [error, seterror] = useState(false)\r\n\r\n    const setGroupImage = (image) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(image);\r\n        reader.onloadend = (e) => {\r\n            setTeamDetails('Image', reader.result)\r\n        }\r\n    }\r\n\r\n    const handleTeamEdit = () => {\r\n        let error = validateGroup(team);\r\n        if (error) {\r\n            seterror(error)\r\n        } else {\r\n            if (team.id) {\r\n                handleTeam('edit', team);\r\n            } else {\r\n                team.id = uuidv4();\r\n                handleTeam('add', team);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleTeamRemove = () => {\r\n        handleTeam('remove', team);\r\n    }\r\n\r\n    const setUserList = ({ id }) => {\r\n        let newMembers = team.members;\r\n        let userExist = newMembers.indexOf(id) > -1;\r\n        if (userExist) {\r\n            newMembers = newMembers.filter(m => m !== id)\r\n        } else {\r\n            newMembers.push(id)\r\n        }\r\n        setTeamDetails('members', newMembers);\r\n    }\r\n\r\n    const setTeamDetails = (key, value) => {\r\n        let newTeam = { ...team, [key]: value }\r\n        setTeam(newTeam)\r\n        seterror('')\r\n    }\r\n\r\n    return (\r\n        <div className='teamBackdrop'>\r\n            <div className='team'>\r\n                <header className=\"header teamHeader\">\r\n                    <h1>\r\n                        {(team.id ? 'Update' : 'Create') + \" Group\"}\r\n                    </h1>\r\n                    <span className=\"close\" onClick={() => setopen(false)}>X</span>\r\n                </header>\r\n                {error && <div className='error'>{error}</div>}\r\n                <section className='teamInfo'>\r\n                    <div className='withUploadButton'>\r\n                        <div className='imageWrapper'>\r\n                            <img src={team.Image} alt='' className='cardImage' />\r\n                        </div>\r\n                        <UploadImage setImage={setGroupImage} />\r\n                    </div>\r\n                    <div className='inputWrapper'>\r\n                        <label>Name *</label>\r\n                        <input placeholder='group name' value={team.name} onChange={e => setTeamDetails('name', e.target.value)} />\r\n                        <label>Descrption</label>\r\n                        <input placeholder='group description' value={team.desc} onChange={e => setTeamDetails('desc', e.target.value)} />\r\n                    </div>\r\n                </section>\r\n                <section className='cardsWrapper'>\r\n                    {users.map(user => <Card key={user.id} data={user} checked={team.members.includes(user.id)} handleClick={setUserList} />)}\r\n                </section>\r\n                <footer>\r\n                    <button className='addButton' onClick={handleTeamEdit}>{team.id ? 'Update' : 'Create'}</button>\r\n                    {team.id && <button className='removeButton' onClick={handleTeamRemove}>Remove</button>}\r\n                </footer>\r\n            </div >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreateGroup\r\n","C:\\Users\\I322\\Desktop\\caavo-challenge\\src\\util.js",["42"],"export const validateGroup = (group) => {\r\n    let error = \"\";\r\n    if (!String(group.name).trim()) {\r\n        error = \"Group name is required\"\r\n    } else if (group.members.length == 0) {\r\n        error = \"Cannot continue without having members in group. Please check atleast one user.\"\r\n    }\r\n    return error;\r\n\r\n}",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":33,"column":27,"nodeType":"49","messageId":"50","endLine":33,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":4,"column":13,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":4,"column":12,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":5,"column":37,"nodeType":"49","messageId":"50","endLine":5,"endColumn":39},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'file' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]